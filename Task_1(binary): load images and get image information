"Get image information"
def get_img_info(csv_file, train = True):

    "Get root path"
    if train:
        base_path = TRAIN_PATH
    else:
        base_path = TEST_PATH

    "Open the CSV file to get image information"
    with open(base_path+csv_file, 'r', encoding='utf-8') as f:
        image_info = []
        infos = f.readlines()
        "Remove the header"
        infos = infos[1:]
        "Change element into tuple format"
        for info in infos:
            info = info.strip('\n')
            info = info.split(',')
            image_info.append(tuple(info))
        return image_info

"Get image and label"
def get_data(img_info, train = True):

    image_list = []
    label_list = []

    "Get root path"
    if train:
        base_path = TRAIN_PATH
    else:
        base_path = TEST_PATH

    for image_name, imgae_label in img_info:

        "Use the PIL library to open the image" 
        img = Image.open(base_path+image_name)
        img = extract_feature_from_image(base_path+image_name)
        "Convert to numpy.array data type"
        img = np.array(img)

        "Process the label, no_tumor-->0, other types-->1"
        if imgae_label == 'no_tumor':
            label_list.append(0)
        else:
            label_list.append(1)
        image_list.append(img)

    "Data normalization to range (0,1)"
    min_max_scaler = MinMaxScaler(feature_range=(0, 1))
    image_list = min_max_scaler.fit_transform(image_list)
    "Normalization"
    image_list = normalize(image_list, norm='l2')

    return image_list, label_list

"Extract feature from image"
def extract_feature_from_image(image_file):
   img = cv2.imread(image_file)
   img = cv2.resize(img, SHAPE, interpolation = cv2.INTER_CUBIC)
   img = img.flatten()
   img = img / np.mean(img)
   return img
